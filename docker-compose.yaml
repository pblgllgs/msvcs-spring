version: '3'

services:

  booking-microservice:
    container_name: mysql_booking_microservice
    image: mysql:8.0.32
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: bookingdb
    volumes:
      - mysql_booking_microservice:/var/lib/mysql

  stock-microservice:
    container_name: mysql_stock_microservice
    image: mysql:8.0.32
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: stockdb
    volumes:
      - mysql_stock_microservice:/var/lib/mysql

  product-microservice:
    container_name: mongo_product_microservice
    image: mongo:5
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: productdb
    ports:
      - "27017:27017"
    volumes:
      - mongo_product_microservice:/data/db

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11-management
    ports:
      - "5672:5672"
      - "15672:15672"

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    ports:
      - "9090:8080"
    restart: unless-stopped
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: ["start-dev","--import-realm"]
    volumes:
      - keycloak_reamls_data:/opt/keycloak/data/

volumes:
  mysql_booking_microservice:
    external: false
  mongo_product_microservice:
    external: false
  keycloak_reamls_data:
    external: false
  mysql_stock_microservice:
    external: false
